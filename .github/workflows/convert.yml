name: convert

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/install_reposurgeon.yml'
  schedule:
    - cron: '0 2 * * *'  # every day at 2:00

jobs:
  convert:
    name: convert
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        svn_repo:
          - ghostlinkd
          - ietfdb
          - mailarch
          - mailreplay
          - postconfirm
          - postfind
          - vocabulary_design_team_2013_2017
          - xml2rfc
          - xml2rfc-bibxml
          - xml2rfc-website

    steps:
      - name: Setup Git
        run: |
          git config --global init.defaultBranch main
          git config --global user.name "ietf-ribose-ci"
          git config --global user.email "ietf-ribose-ci@users.noreply.github.com"

      - name: reposurgeon - Cache reposurgeon
        id: cache-reposurgeon
        uses: actions/cache@v2
        with:
          path: reposurgeon
          key: ${{ runner.os }}-${{ hashFiles('reposurgeon-cache-key') }}

      - name: reposurgeon - Clone and build reposurgeon
        if: steps.cache-reposurgeon.outputs.cache-hit != 'true'
        run: |
          git clone https://gitlab.com/esr/reposurgeon
          cd reposurgeon
          git checkout 2f5f83ec63da34beaf8293434b5e1627366dfa7c
          sed -i 's/apt-get install /apt-get install -y /' Makefile
          make fullinstall
          make all

      - name: reposurgeon - Install reposurgeon
        working-directory: reposurgeon
        run: |
          sudo make install

      - uses: actions/checkout@v2
        with:
          path: conversion

      - name: Add svn/ directory
        run: |
          mkdir -p svn git

      - name: Checkout trac-svn-db repo
        uses: actions/checkout@v2
        with:
          repository: ietf-ribose/trac-svn-db
          token: ${{ secrets.IETF_RIBOSE_CI_PAT }}
          path: trac-svn-db

      - name: Convert SVN to Git via reposurgeon
        if: ${{ matrix.svn_repo != 'xml2rfc-bibxml' && matrix.svn_repo != 'xml2rfc-website' && matrix.svn_repo != 'vocabulary_design_team_2013_2017' }}
        working-directory: conversion/${{ matrix.svn_repo }}
        env:
          TERM: xterm-256color
        run: |
          ln -s ../../trac-svn-db/svn/${{ matrix.svn_repo }} ${{ matrix.svn_repo }}-mirror
          make
          mv ${{ matrix.svn_repo }}-git ../../git/${{ matrix.svn_repo }}

      - name: Convert SVN to Git via reposurgeon
        if: ${{ matrix.svn_repo == 'xml2rfc-bibxml' || matrix.svn_repo == 'xml2rfc-website' || matrix.svn_repo == 'vocabulary_design_team_2013_2017' }}
        working-directory: conversion/${{ matrix.svn_repo }}
        env:
          TERM: xterm-256color
        run: |
          ln -s ../../trac-svn-db/svn/xml2rfc ${{ matrix.svn_repo }}-mirror
          make
          mv ${{ matrix.svn_repo }}-git ../../git/${{ matrix.svn_repo }}

      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.IETF_RIBOSE_CI_SSH_PRIVATE }}

      - name: Add GitHub remote to ${{ matrix.svn_repo }} repo
        working-directory: git/${{ matrix.svn_repo }}
        run: |
          git remote add origin \
            git@github.com:ietf-ribose/${{ matrix.svn_repo }}.git

      - name: List git branches
        # if: steps.git_status.outputs.STATUS != ''
        working-directory: git/${{ matrix.svn_repo }}
        run: |
          git branch

      - name: List git tags
        # if: steps.git_status.outputs.STATUS != ''
        working-directory: git/${{ matrix.svn_repo }}
        run: |
          git tag

      - name: Git push to GitHub ${{ matrix.svn_repo }}
        # if: steps.git_status.outputs.STATUS != ''
        working-directory: git/${{ matrix.svn_repo }}
        run: |
          max=$(git log --oneline|wc -l); \
          for i in $(seq $max -500 1); do \
            echo $i; g=$(git log --reverse --oneline --skip $i -n1|perl -alne'print $F[0]'); \
            git push origin $g:refs/heads/gitconvert -f; \
          done

          for x in $(git branch | tr -ds '*' '' | paste -d " " - - - - - - - - - - | tr -s ' ' '#'); do \
            y="${x//#/ }"; \
            echo $y; \
            git push origin -f $y; \
          done

          for x in $(git tag | tr -ds '*' '' | paste -d " " - - - - - - - - - - | tr -s ' ' '#'); do \
            y="${x//#/ }"; \
            echo $y; \
            git push origin -f $y; \
          done

          git push origin :refs/heads/gitconvert -f

      - name: Checkout svn-git-maps repo
        uses: actions/checkout@v2
        with:
          repository: ietf-ribose/svn-git-maps
          token: ${{ secrets.IETF_RIBOSE_CI_PAT }}
          path: svn-git-maps

      - name: Copy and commit ${{ matrix.svn_repo }}.fo to svn-git-maps
        working-directory: svn-git-maps
        run: |
          git remote set-url origin \
            git@github.com:ietf-ribose/svn-git-maps.git
          cp ${GITHUB_WORKSPACE}/conversion/${{ matrix.svn_repo }}/${{ matrix.svn_repo }}.fo .
          git add ${{ matrix.svn_repo }}.fo
          git commit -m 'Update ${{ matrix.svn_repo }} mapping'
          timeout 30s bash -c 'until git pull --rebase && git push; do sleep 3; done'
